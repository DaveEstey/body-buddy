generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type WorkoutsExercises {
  name    String
  reps    Int
  sets    Int
  weight  Int
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @map("user_id") @db.ObjectId
  type               String
  providerType       String
  providerId         String  @map("provider_account_id")
  refresh_token      String? @db.String
  access_token       String? @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.String
  session_state      String?

  user users @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([providerType, providerId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @map("user_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         users    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model users {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  age         Int?
  email       String @unique
  emailVerified DateTime?
  image       String?
  userName    String 
  height      Int?
  sex         String?
  weight      Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  workouts    workouts[]
  accounts    Account[]
  sessions    Session[]
}

model workouts {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  exercises WorkoutsExercises[]
  name      String
  user      users @relation(fields: [userId], references: [id])
  userId    String @db.ObjectId
}

model VerificationRequest {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}